pipeline {
    agent any

    environment {
        AWS_REGION = "ap-south-2"
        SONAR_URL = "http://3.85.230.100:9000/"
        AWS_ACCOUNT_ID = "your_aws_account_id"
        REPO_NAME = "your_repo_name"
        BUILD_NUMBER = "${env.BUILD_NUMBER}"
    }

    stages {
        stage("Checkout Code") {
            steps {
                script {
                    echo "Checking out code..."
                    checkout scm
                }
            }
        }

        stage("Build and Package") {
            steps {
                script {
                    sh """
                        mvn spring-boot:build-image -Dmaven.test.skip=true \\
                            -Dspring-boot.build-image.imageName=${REPO_NAME}-main-${BUILD_NUMBER}
                    """
                }
            }
        }

        stage("Sonar Analysis") {
            steps {
                script {
                    echo "Running Sonar analysis for 'main' branch"
                    withSonarQubeEnv('sonar') {
                        sh """
                            mvn clean sonar:sonar -DskipTests \\
                                -Dsonar.java.binaries=target/classes \\
                                -Dsonar.host.url=${SONAR_URL}
                        """
                    }
                }
            }
        }

        stage("Docker Login & Build") {
            steps {
                script {
                    echo "Logging into Docker Hub using Jenkins credentials"

                    withCredentials([usernamePassword(credentialsId: 'Docker', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh """
                            docker login -u $DOCKER_USER -p $DOCKER_PASS
                        """
                    }

                    echo "Building Docker image"
                    sh """
                        docker build -t ${REPO_NAME}-main-${BUILD_NUMBER} .
                    """
                }
            }
        }

        stage("Push Docker Image to AWS ECR") {
            steps {
                script {
                    echo "Logging into AWS ECR"

                    withAWS(region: "${AWS_REGION}", credentials: "Aws") {
                        sh "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
                        
                        echo "Tagging Docker Image"
                        sh """
                            docker tag ${REPO_NAME}-main-${BUILD_NUMBER} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPO_NAME}:main-${BUILD_NUMBER}
                        """

                        echo "Pushing Docker Image to AWS ECR"
                        sh """
                            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPO_NAME}:main-${BUILD_NUMBER}
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully!"
        }
        failure {
            echo "Pipeline execution failed!"
        }
    }
}
