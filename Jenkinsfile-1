pipeline {
    agent any

    tools {
        maven 'Maven'  // Ensure 'Maven' is configured in Jenkins Global Tool Configuration
    }

    environment {
        AWS_REGION = "ap-south-2"
        SONAR_URL = "http://3.85.230.100:9000/"
        AWS_ACCOUNT_ID = "796973488942"
        REPO_NAME = "main"
        BUILD_NUMBER = "${env.BUILD_NUMBER}"
        S3_BUCKET = "shru123"
        IMAGE_NAME = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPO_NAME}:${REPO_NAME}-main-${BUILD_NUMBER}"
    }

    stages {
        stage("Checkout Code") {
            steps {
                script {
                    echo "Checking out code..."
                    checkout scm
                }
            }
        }

        stage("Build and Package") {
            steps {
                script {
                    sh "mvn clean package -Dmaven.test.skip=true | tee mvn_build.log"
                    archiveArtifacts artifacts: 'mvn_build.log', fingerprint: true
                }
            }
        }

        stage("Sonar Analysis") {
            steps {
                script {
                    echo "Running Sonar analysis for 'main' branch"
                    withSonarQubeEnv('soanr') { // Using the correct Jenkins SonarQube credentials ID
                        sh """
                            mvn sonar:sonar -Dsonar.host.url=${SONAR_URL}
                        """
                    }
                }
            }
        }

        stage("Docker Build & Push to AWS ECR") {
            steps {
                script {
                    echo "Building Docker image"
                    sh "docker build -t ${IMAGE_NAME} ."

                    echo "Logging in to AWS ECR"
                    withAWS(region: "${AWS_REGION}", credentials: "aws_credentials") {
                        sh "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
                        sh "docker push ${IMAGE_NAME}"
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully!"
        }
        failure {
            echo "Pipeline execution failed!"
        }
    }
}
