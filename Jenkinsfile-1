pipeline {
    agent any
    tools {
        maven 'maven'
    }
    options {
        buildDiscarder(logRotator(daysToKeepStr: '30', artifactDaysToKeepStr: '30'))
        timeout(time: 50, unit: 'MINUTES')
        timestamps()
        disableConcurrentBuilds()
    }
    environment {
        repoName = 'darinpope-java-web-app'
        branchName = 'main'
        awsRegion = 'ap-south-2'
        sonarServer = 'http://3.85.230.100:9000/'
    }
    stages {
        stage('Build and Package') {
            steps {
                script {
                    pom = readMavenPom file: "pom.xml"
                    projectVersion = pom.version
                    sh """
                        mvn spring-boot:build-image -Dmaven.test.skip=true \\
                            -Dspring-boot.build-image.imageName=${repoName}-${branchName}-${BUILD_NUMBER}:${projectVersion}
                    """
                }
            }
        }
        stage('Sonar Analysis') {
            steps {
                script {
                    echo "Running Sonar analysis on the ${branchName} branch"
                    withSonarQubeEnv('sonar') {
                        sh '''
                        mvn clean sonar:sonar -DskipTests -Dsonar.java.binaries=target/classes -Dsonar.host.url=${sonarServer}
                        '''
                    }
                }
            }
        }
        stage('Upload Artifacts to S3 bucket') {
            steps {
                withCredentials([aws(credentialsId: 'Aws')]) {
                    script {
                        sh '''
                        rm -rf s3uploadjar
                        mkdir s3uploadjar
                        chmod 755 s3uploadjar
                        cp target/*.jar s3uploadjar/
                        aws s3 cp s3uploadjar/ s3://shru123/ --recursive --region ${awsRegion}
                        '''
                    }
                }
            }
        }
        stage('CleanWorkspace') {
            steps {
                cleanWs()
                echo 'Cleaned workspace after build'
            }
        }
    }
}
